[{"F:\\Git\\WNC\\onlacademy-react\\src\\index.js":"1","F:\\Git\\WNC\\onlacademy-react\\src\\App.js":"2","F:\\Git\\WNC\\onlacademy-react\\src\\reportWebVitals.js":"3","F:\\Git\\WNC\\onlacademy-react\\src\\components\\Header\\index.jsx":"4","F:\\Git\\WNC\\onlacademy-react\\src\\AppReducer.js":"5","F:\\Git\\WNC\\onlacademy-react\\src\\AppContext.js":"6","F:\\Git\\WNC\\onlacademy-react\\src\\components\\Header\\NavSearch.jsx":"7","F:\\Git\\WNC\\onlacademy-react\\src\\components\\Header\\NavHead.jsx":"8","F:\\Git\\WNC\\onlacademy-react\\src\\services\\course.js":"9","F:\\Git\\WNC\\onlacademy-react\\src\\AppTypes.js":"10","F:\\Git\\WNC\\onlacademy-react\\src\\services\\category.js":"11","F:\\Git\\WNC\\onlacademy-react\\src\\Layouts\\Default\\index.jsx":"12","F:\\Git\\WNC\\onlacademy-react\\src\\Layouts\\Admin\\index.jsx":"13","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Home\\index.jsx":"14","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Home\\components\\Course\\index.jsx":"15","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Login\\index.jsx":"16","F:\\Git\\WNC\\onlacademy-react\\src\\services\\auth.js":"17","F:\\Git\\WNC\\onlacademy-react\\src\\utils\\makeAPI.js":"18","F:\\Git\\WNC\\onlacademy-react\\src\\AppState.js":"19","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\index.jsx":"20","F:\\Git\\WNC\\onlacademy-react\\src\\components\\PrivateRoute\\index.jsx":"21","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Register\\index.jsx":"22","F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Admin\\index.jsx":"23","F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Default\\index.jsx":"24","F:\\Git\\WNC\\onlacademy-react\\src\\components\\Header\\NavMenuItem.jsx":"25","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\index.jsx":"26","F:\\Git\\WNC\\onlacademy-react\\src\\utils\\format.js":"27","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Home\\components\\MenuFilter\\index.jsx":"28","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Home\\components\\ItemFilter\\index.jsx":"29","F:\\Git\\WNC\\onlacademy-react\\src\\services\\search.js":"30","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\ModalVideo\\index.jsx":"31","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\MainImage\\index.jsx":"32","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\Detail\\index.jsx":"33","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\Recommend\\index.jsx":"34","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\Feedbback\\index.jsx":"35","F:\\Git\\WNC\\onlacademy-react\\src\\services\\common.js":"36","F:\\Git\\WNC\\onlacademy-react\\src\\components\\Paginate\\index.jsx":"37","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\Menu\\index.jsx":"38","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\ItemMenu\\index.jsx":"39","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\Info\\index.jsx":"40","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\ChangePassword\\index.jsx":"41","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\Content\\index.jsx":"42","F:\\Git\\WNC\\onlacademy-react\\src\\services\\user.js":"43","F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Default\\components\\Content\\index.jsx":"44","F:\\Git\\WNC\\onlacademy-react\\src\\utils\\firebase.js":"45","F:\\Git\\WNC\\onlacademy-react\\src\\components\\Loading\\index.jsx":"46","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\RegisteredCourses\\index.jsx":"47","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\Course\\index.jsx":"48","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\index.jsx":"49","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\Video\\index.jsx":"50","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\BreadCrumb\\index.jsx":"51","F:\\Git\\WNC\\onlacademy-react\\src\\services\\video.js":"52","F:\\Git\\WNC\\onlacademy-react\\src\\components\\Footer\\index.jsx":"53","F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Teacher\\index.jsx":"54","F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Teacher\\components\\Content\\index.jsx":"55","F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Teacher\\components\\Menu\\index.jsx":"56","F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Teacher\\components\\ItemMenu\\index.jsx":"57","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\Add\\index.jsx":"58","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\Lesson\\index.jsx":"59","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\VideoThumbnail\\index.jsx":"60","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\VideoThumbnail\\index.jsx":"61","F:\\Git\\WNC\\onlacademy-react\\src\\utils\\common.js":"62","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\AddVideo\\index.jsx":"63","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\EditVideo\\index.jsx":"64","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\AddSlide\\index.jsx":"65","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\EditSlide\\index.jsx":"66","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\ListVideo\\index.jsx":"67","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\ListSlide\\index.jsx":"68","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\SlideThumbnail\\index.jsx":"69","F:\\Git\\WNC\\onlacademy-react\\src\\services\\slide.js":"70","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\Edit\\index.jsx":"71","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\ListVideo\\index.jsx":"72","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\ListSlide\\index.jsx":"73","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\SlideThumbnail\\index.jsx":"74","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\Slide\\index.jsx":"75"},{"size":500,"mtime":499162500000,"results":"76","hashOfConfig":"77"},{"size":1328,"mtime":1612410789143,"results":"78","hashOfConfig":"77"},{"size":362,"mtime":499162500000,"results":"79","hashOfConfig":"77"},{"size":468,"mtime":1612335154199,"results":"80","hashOfConfig":"77"},{"size":830,"mtime":1613112830881,"results":"81","hashOfConfig":"77"},{"size":145,"mtime":1609934933541,"results":"82","hashOfConfig":"77"},{"size":1444,"mtime":1612791652196,"results":"83","hashOfConfig":"77"},{"size":3180,"mtime":1612784542336,"results":"84","hashOfConfig":"77"},{"size":3533,"mtime":1613279108560,"results":"85","hashOfConfig":"77"},{"size":438,"mtime":1612773947415,"results":"86","hashOfConfig":"77"},{"size":283,"mtime":1611898271886,"results":"87","hashOfConfig":"77"},{"size":1135,"mtime":1610594868743,"results":"88","hashOfConfig":"77"},{"size":343,"mtime":1610531738490,"results":"89","hashOfConfig":"77"},{"size":1521,"mtime":1612059093332,"results":"90","hashOfConfig":"77"},{"size":1605,"mtime":1612942630855,"results":"91","hashOfConfig":"77"},{"size":5146,"mtime":1612851051525,"results":"92","hashOfConfig":"77"},{"size":1943,"mtime":1612850831983,"results":"93","hashOfConfig":"77"},{"size":1709,"mtime":1612752668681,"results":"94","hashOfConfig":"77"},{"size":400,"mtime":1612570447810,"results":"95","hashOfConfig":"77"},{"size":361,"mtime":1612174840582,"results":"96","hashOfConfig":"77"},{"size":563,"mtime":1612343408968,"results":"97","hashOfConfig":"77"},{"size":3806,"mtime":1612404771073,"results":"98","hashOfConfig":"77"},{"size":343,"mtime":1610531738490,"results":"99","hashOfConfig":"77"},{"size":1024,"mtime":1612336383420,"results":"100","hashOfConfig":"77"},{"size":1184,"mtime":1612229723555,"results":"101","hashOfConfig":"77"},{"size":2618,"mtime":1612942570243,"results":"102","hashOfConfig":"77"},{"size":445,"mtime":1612233285761,"results":"103","hashOfConfig":"77"},{"size":2017,"mtime":1612229479374,"results":"104","hashOfConfig":"77"},{"size":415,"mtime":1611477296357,"results":"105","hashOfConfig":"77"},{"size":380,"mtime":1611898059011,"results":"106","hashOfConfig":"77"},{"size":873,"mtime":1612324376713,"results":"107","hashOfConfig":"77"},{"size":214,"mtime":1612942580507,"results":"108","hashOfConfig":"77"},{"size":1837,"mtime":1612938440064,"results":"109","hashOfConfig":"77"},{"size":1772,"mtime":1611540031852,"results":"110","hashOfConfig":"77"},{"size":211,"mtime":1611540204095,"results":"111","hashOfConfig":"77"},{"size":277,"mtime":1611715877186,"results":"112","hashOfConfig":"77"},{"size":1347,"mtime":1611893581743,"results":"113","hashOfConfig":"77"},{"size":1730,"mtime":1612774767608,"results":"114","hashOfConfig":"77"},{"size":588,"mtime":1612063163627,"results":"115","hashOfConfig":"77"},{"size":6590,"mtime":1613032372199,"results":"116","hashOfConfig":"77"},{"size":3962,"mtime":1612753791336,"results":"117","hashOfConfig":"77"},{"size":862,"mtime":1612774520203,"results":"118","hashOfConfig":"77"},{"size":934,"mtime":1612754660287,"results":"119","hashOfConfig":"77"},{"size":974,"mtime":1613315312838,"results":"120","hashOfConfig":"77"},{"size":662,"mtime":1612165114280,"results":"121","hashOfConfig":"77"},{"size":292,"mtime":1612179811689,"results":"122","hashOfConfig":"77"},{"size":1080,"mtime":1612238055456,"results":"123","hashOfConfig":"77"},{"size":1354,"mtime":1613315474082,"results":"124","hashOfConfig":"77"},{"size":3647,"mtime":1613312231514,"results":"125","hashOfConfig":"77"},{"size":525,"mtime":1612855650412,"results":"126","hashOfConfig":"77"},{"size":516,"mtime":1612321365767,"results":"127","hashOfConfig":"77"},{"size":1283,"mtime":1613060991315,"results":"128","hashOfConfig":"77"},{"size":1336,"mtime":1612342954371,"results":"129","hashOfConfig":"77"},{"size":749,"mtime":1612409258267,"results":"130","hashOfConfig":"77"},{"size":1175,"mtime":1613190700043,"results":"131","hashOfConfig":"77"},{"size":1447,"mtime":1613190897969,"results":"132","hashOfConfig":"77"},{"size":430,"mtime":1612407539596,"results":"133","hashOfConfig":"77"},{"size":9531,"mtime":1613217104102,"results":"134","hashOfConfig":"77"},{"size":6751,"mtime":1613137657538,"results":"135","hashOfConfig":"77"},{"size":598,"mtime":1613095886776,"results":"136","hashOfConfig":"77"},{"size":772,"mtime":1612856379588,"results":"137","hashOfConfig":"77"},{"size":1001,"mtime":1613031700512,"results":"138","hashOfConfig":"77"},{"size":4335,"mtime":1613139099790,"results":"139","hashOfConfig":"77"},{"size":5441,"mtime":1613117298740,"results":"140","hashOfConfig":"77"},{"size":4282,"mtime":1613139114902,"results":"141","hashOfConfig":"77"},{"size":5210,"mtime":1613114432096,"results":"142","hashOfConfig":"77"},{"size":569,"mtime":1613059087563,"results":"143","hashOfConfig":"77"},{"size":575,"mtime":1613113380888,"results":"144","hashOfConfig":"77"},{"size":586,"mtime":1613115949717,"results":"145","hashOfConfig":"77"},{"size":976,"mtime":1613106408937,"results":"146","hashOfConfig":"77"},{"size":16183,"mtime":1613282757482,"results":"147","hashOfConfig":"77"},{"size":572,"mtime":1613312907114,"results":"148","hashOfConfig":"77"},{"size":572,"mtime":1613311613421,"results":"149","hashOfConfig":"77"},{"size":760,"mtime":1613312775981,"results":"150","hashOfConfig":"77"},{"size":433,"mtime":1613312533401,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"f1vsdx",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"154"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"154"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"154"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"154"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"154"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"154"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"154"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Git\\WNC\\onlacademy-react\\src\\index.js",[],["316","317"],"F:\\Git\\WNC\\onlacademy-react\\src\\App.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\reportWebVitals.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\components\\Header\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\AppReducer.js",["318"],"import {\r\n  INIT_MENU_HEADER,\r\n  INIT_HOME,\r\n  LOGOUT,\r\n  LOGIN_SUCCESS,\r\n  GET_USER_COURSES\r\n} from './AppTypes';\r\n\r\nconst reducer = (state, action) => {\r\n  state = {\r\n    ...state,\r\n    role: localStorage.onlineAcademy_role || null\r\n  }\r\n  switch (action.type) {\r\n    case INIT_MENU_HEADER:\r\n      return {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n      }\r\n    case INIT_HOME: {\r\n      return {\r\n        ...state,\r\n        courses: action.payload.courses,\r\n        paginate: action.payload.paginate\r\n      }\r\n    }\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLogged: action.payload.isLogged\r\n      }\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLogged: action.payload.isLogged\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","F:\\Git\\WNC\\onlacademy-react\\src\\AppContext.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\components\\Header\\NavSearch.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\components\\Header\\NavHead.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\services\\course.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\AppTypes.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\services\\category.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\Layouts\\Default\\index.jsx",["319"],"import React, { useEffect, useContext } from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport Header from '../../components/Header';\r\nimport Menu from './components/Menu';\r\nimport Content from './components/Content';\r\n\r\nimport AppContext from '../../AppContext';\r\nimport { INIT_HOME } from '../../AppTypes';\r\nimport { getInitCategories } from '../../services/category';\r\nimport { getInitCourses } from '../../services/course';\r\n\r\nimport './index.css';\r\n\r\nconst Default = (props) => {\r\n\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let categories = await getInitCategories();\r\n      let courses = await getInitCourses();\r\n\r\n      dispatch({\r\n        type: INIT_HOME,\r\n        payload: {\r\n          categories,\r\n          courses\r\n        }\r\n      });\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"main\">\r\n        <Row>\r\n          <Menu />\r\n          <Content />\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Default;",["320","321"],"F:\\Git\\WNC\\onlacademy-react\\src\\Layouts\\Admin\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Home\\index.jsx",["322"],"import React, { useContext, useEffect } from 'react';\r\n\r\nimport Course from './components/Course';\r\nimport Paginate from '../../components/Paginate';\r\nimport MenuFilter from './components/MenuFilter';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nimport AppContext from '../../AppContext';\r\nimport { INIT_HOME } from '../../AppTypes';\r\nimport { getAllCourses } from '../../services/course';\r\nimport { getDataPaginate } from '../../services/common';\r\n\r\nconst Home = () => {\r\n  const { store, dispatch } = useContext(AppContext);\r\n  const isExist = store.courses.length > 0;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let { courses, paginate } = await getAllCourses();\r\n      dispatch({\r\n        type: INIT_HOME,\r\n        payload: {\r\n          courses,\r\n          paginate\r\n        }\r\n      });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handlePageChange = async (url) => {\r\n    let { courses, paginate } = await getDataPaginate(url);\r\n    dispatch({\r\n      type: INIT_HOME,\r\n      payload: {\r\n        courses,\r\n        paginate\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Col lg={3} xs={12}>\r\n        <MenuFilter />\r\n      </Col>\r\n      <Col lg={9} xs=\"12\">\r\n        {isExist\r\n          ? store.courses.map((course, i) => <Course key={i} course={course} />)\r\n          : <div>Không có dữ liệu</div>\r\n        }\r\n        {store.paginate.totalPages > 1 && <Paginate paginate={store.paginate} onPageChange={handlePageChange} />}\r\n      </Col>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Home\\components\\Course\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Login\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\services\\auth.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\utils\\makeAPI.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\AppState.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\components\\PrivateRoute\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Register\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Admin\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Default\\index.jsx",["323"],"import React, { useEffect, useContext } from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport Header from '../../components/Header';\r\nimport Content from './components/Content';\r\nimport Footer from '../../components/Footer';\r\n\r\nimport AppContext from '../../AppContext';\r\nimport { INIT_MENU_HEADER } from '../../AppTypes';\r\nimport { getInitCategories } from '../../services/category';\r\n\r\nimport './index.css';\r\n\r\nconst Default = () => {\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let categories = await getInitCategories();\r\n      dispatch({\r\n        type: INIT_MENU_HEADER,\r\n        payload: {\r\n          categories,\r\n        }\r\n      });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"main\">\r\n        <Row>\r\n          <Content />\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Default;","F:\\Git\\WNC\\onlacademy-react\\src\\components\\Header\\NavMenuItem.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\index.jsx",["324","325"],"import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { getCourseById } from '../../services/course';\r\nimport { getVideoIntro } from '../../services/video';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport MainImage from './components/MainImage';\r\nimport Detail from './components/Detail';\r\nimport ModalVideo from './components/ModalVideo';\r\nimport Recommend from './components/Recommend';\r\nimport Feedback from './components/Feedbback';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport './index.css';\r\n\r\nconst Course = () => {\r\n  let { courseId } = useParams();\r\n  const [course, setCourse] = useState({});\r\n  let [feedbacks, setFeedbacks] = useState([]);\r\n  let [recommend, setRecommend] = useState([]);\r\n  let [show, setShow] = useState(false);\r\n  let [videoIntro, setVideoIntro] = useState(null);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { from } = location.state || { from: { pathname: '/' } };\r\n  const Toast = Swal.mixin({ toast: true });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let res = await getCourseById(courseId);\r\n      if (res === null) {\r\n        Toast.fire({\r\n          position: 'top-right',\r\n          width: 400,\r\n          title: 'Khóa học không tồn tại!',\r\n          icon: 'warning',\r\n          showConfirmButton: false,\r\n          timer: 2000\r\n        });\r\n        history.replace(from);\r\n      } else {\r\n        setCourse(res.course);\r\n        setFeedbacks(res.feedbacks);\r\n        setRecommend(res.recommend);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n\r\n  const handleShow = async () => {\r\n    let res = await getVideoIntro(courseId);\r\n    if (res === null) {\r\n      Toast.fire({\r\n        position: 'top-right',\r\n        width: 400,\r\n        title: 'Khóa học chưa có video hướng dẫn',\r\n        icon: 'info',\r\n        showConfirmButton: false,\r\n        timer: 2000\r\n      });\r\n    } else {\r\n      setVideoIntro(res);\r\n      setShow(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Col lg={4} xs={12}>\r\n        <MainImage image={course.img_large} />\r\n      </Col>\r\n\r\n      <Col lg={8} xs={12}>\r\n        <Detail course={course} onShowModal={handleShow} />\r\n      </Col>\r\n\r\n      <Col lg={12} xs={12}>\r\n        <Recommend recommend={recommend} />\r\n      </Col>\r\n\r\n      <Col lg={12} xs={12}>\r\n        <Feedback />\r\n      </Col>\r\n\r\n      {videoIntro && <ModalVideo show={show} videoIntro={videoIntro} onCloseModal={handleClose} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Course;","F:\\Git\\WNC\\onlacademy-react\\src\\utils\\format.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Home\\components\\MenuFilter\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Home\\components\\ItemFilter\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\services\\search.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\ModalVideo\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\MainImage\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\Detail\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\Recommend\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Course\\components\\Feedbback\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\services\\common.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\components\\Paginate\\index.jsx",["326"],"import React, { useState, useEffect } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport './index.css';\r\n\r\nconst Paginate = ({ paginate, onPageChange }) => {\r\n  const [forcePage, setForcePage] = useState(null);\r\n  useEffect(() => {\r\n    if (paginate.currentPage !== forcePage + 1) {\r\n      setForcePage(0);\r\n    }\r\n  }, [paginate.uri, paginate.currentPage])\r\n\r\n  const handlePageClick = (data) => {\r\n    setForcePage(data.selected);\r\n    const api = `${paginate.uri}&limit=${paginate.limit}&page=${data.selected + 1}`;\r\n    onPageChange(api);\r\n  }\r\n\r\n  return (\r\n    <ReactPaginate\r\n      pageCount={paginate.totalPages}\r\n      marginPagesDisplayed={1}\r\n      pageRangeDisplayed={2}\r\n      onPageChange={handlePageClick}\r\n      containerClassName={'pagination paginate-cus'}\r\n      previousLabel={<i className=\"fa fa-angle-left\"></i>}\r\n      previousClassName={'page-item'}\r\n      previousLinkClassName={'page-link'}\r\n      nextLabel={<i className=\"fa fa-angle-right\"></i>}\r\n      nextClassName={'page-item'}\r\n      nextLinkClassName={'page-link'}\r\n      breakLabel={'...'}\r\n      breakClassName={'page-item'}\r\n      breakLinkClassName={'page-link'}\r\n      pageClassName={'page-item'}\r\n      pageLinkClassName={'page-link'}\r\n      activeClassName={'active'}\r\n      forcePage={forcePage}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Paginate;","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\Menu\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\ItemMenu\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\Info\\index.jsx",["327","328"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport firebase from '../../../../utils/firebase';\r\nimport {\r\n  uploadToFirebase,\r\n  removeToFirebase,\r\n  stringGenerate,\r\n  alertMessage\r\n} from '../../../../utils/common';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Loading from '../../../../components/Loading';\r\n\r\nimport AppContext from '../../../../AppContext';\r\nimport { LOGOUT } from '../../../../AppTypes';\r\nimport { getUser } from '../../../../services/user';\r\nimport { update } from '../../../../services/user';\r\nimport './index.css';\r\n\r\nconst schema = yup.object().shape({\r\n  full_name: yup.string(),\r\n  address: yup.string(),\r\n  phone: yup\r\n    .string()\r\n    .max(11, 'Số điện thoại của bạn không hợp lệ')\r\n    .min(10, 'Số điện thoại của bạn không hợp lệ')\r\n});\r\n\r\nconst Info = () => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n  const { dispatch } = useContext(AppContext);\r\n  const [user, setUser] = useState({\r\n    id: '',\r\n    username: '',\r\n    full_name: '',\r\n    phone: '',\r\n    address: '',\r\n    img_url: '',\r\n    img_name: ''\r\n  });\r\n  const [chooseFile, setChooseFile] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let res = await getUser();\r\n      if (res.authenticated === false) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n          payload: {\r\n            isLogged: false\r\n          }\r\n        });\r\n      } else {\r\n        console.log('user', res);\r\n        setUser(res);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleChooseFile = (event) => {\r\n    const file = event.target.files[0];\r\n    const previewFile = URL.createObjectURL(file);\r\n    setUser({ ...user, img_url: previewFile });\r\n    setChooseFile(true);\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    setIsLoading(true);\r\n    const form = { ...data };\r\n    delete form.image;\r\n\r\n    const imgName = stringGenerate() + data.image[0].name;\r\n    if (chooseFile) {\r\n      const url = await uploadToFirebase({\r\n        file: data.image[0],\r\n        fileName: imgName,\r\n        folderUrl: `images/avatar/user-${user.id}`\r\n      });\r\n\r\n      if (url === null) {\r\n        alertMessage({ type: 'error', message: 'Cập nhật thất bại' });\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      form.img_url = url;\r\n      form.img_name = imgName;\r\n\r\n    } else {\r\n      form.img_url = user.img_url;\r\n      form.img_name = user.img_name;\r\n    }\r\n\r\n    const result = await update(form);\r\n    let isProcessError;\r\n\r\n    if (result.state) {\r\n      if (user.img_name !== '' && user.img_name !== null) {\r\n        isProcessError = await removeToFirebase({\r\n          fileName: user.img_name,\r\n          folderUrl: `images/avatar/user-${user.id}`\r\n        });\r\n      }\r\n\r\n      setUser({\r\n        ...user,\r\n        img_url: form.img_url,\r\n        img_name: form.img_name\r\n      });\r\n\r\n      if (isProcessError === null) {\r\n        alertMessage({ type: 'warning', message: 'Đã có một lỗi nhỏ trong quá trình cập nhật.' });\r\n      } else {\r\n        alertMessage({ type: 'success', message: 'Cập nhật thông tin thành công.' });\r\n      }\r\n\r\n    } else {\r\n      alertMessage({ type: 'error', message: 'Cập nhật thông tin thất bại.' });\r\n      if (result.auth !== undefined && result.auth.authenticated === false) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n          payload: {\r\n            isLogged: false\r\n          }\r\n        });\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading && <Loading />}\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <Col lg={8} className=\"col-relative\">\r\n            <Form.Group>\r\n              <Form.Label>Tài khoản</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"text\" defaultValue={user.username} readOnly />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\"></span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"text\" defaultValue={user.email} readOnly />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\"></span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Họ và tên</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"text\" name=\"full_name\" defaultValue={user.full_name} ref={register} placeholder=\"Nhập họ tên\" />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.full_name?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Địa chỉ</Form.Label>\r\n              <Form.Control as=\"textarea\" name=\"address\" defaultValue={user.address} ref={register} rows={3} />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.address?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Điện thoại</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"text\" name=\"phone\" defaultValue={user.phone} ref={register} placeholder=\"Nhập số điện thoại\" />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.phone?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" className=\"btn-update\" variant=\"outline-dark\">Cập nhật</Button>\r\n          </Col>\r\n          <Col lg={4}>\r\n            <Image className=\"avatar\" src={user.img_url} roundedCircle />\r\n            <Form.Group>\r\n              <Form.File id=\"exampleFormControlFile1\" name=\"image\" onChange={handleChooseFile} ref={register} accept=\"image/*\" />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Info;","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\ChangePassword\\index.jsx",["329"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Loading from '../../../../components/Loading';\r\n\r\nimport { LOGOUT } from '../../../../AppTypes';\r\nimport AppContext from '../../../../AppContext';\r\nimport { changePassword } from '../../../../services/user';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport './index.css';\r\n\r\nconst schema = yup.object().shape({\r\n  old_password: yup\r\n    .string()\r\n    .required('Bạn chưa nhập mật khẩu cũ')\r\n    .min(8, \"Mật khẩu phải từ 8 kí tự trở lên\"),\r\n  password: yup\r\n    .string()\r\n    .required('Bạn chưa nhập mật khẩu mới')\r\n    .min(8, \"Mật khẩu phải từ 8 kí tự trở lên\"),\r\n  confirm_password: yup\r\n    .string()\r\n    .required('Bạn chưa nhập xác nhận mật khẩu mới')\r\n    .oneOf([yup.ref(\"password\")], \"Mật khẩu mới không giống nhau\")\r\n});\r\n\r\nconst ChangePassword = () => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n  const { dispatch } = useContext(AppContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const Toast = Swal.mixin({ toast: true });\r\n\r\n  const onSubmit = async (data) => {\r\n    setIsLoading(true);\r\n    const res = await changePassword(data);\r\n\r\n    if (res.state) {\r\n      Toast.fire({\r\n        position: 'top-right',\r\n        width: 400,\r\n        title: 'Đổi mật khẩu thành công',\r\n        icon: 'success',\r\n        showConfirmButton: false,\r\n        timer: 2000\r\n      });\r\n    } else {\r\n      Toast.fire({\r\n        position: 'top-right',\r\n        width: 400,\r\n        title: 'Đổi mật khẩu thất bại',\r\n        icon: 'error',\r\n        showConfirmButton: false,\r\n        timer: 2000\r\n      });\r\n      if (res.auth !== undefined && res.auth.authenticated === false) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n          payload: {\r\n            isLogged: false\r\n          }\r\n        });\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading && <Loading />}\r\n      <Row>\r\n        <Col lg={8} className=\"form-relative\">\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Form.Group>\r\n              <Form.Label>Mật khẩu cũ</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"password\" name=\"old_password\" ref={register} placeholder=\"Mật khẩu cũ\" autoFocus />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.old_password?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Mật khẩu mới</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"password\" name=\"password\" ref={register} placeholder=\"Mật khẩu mới\" />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.password?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Nhập lại mật khẩu mới</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"password\" name=\"confirm_password\" ref={register} placeholder=\"Mật khẩu mới\" />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.confirm_password?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" className=\"btn-change-password\" variant=\"outline-dark\">Đổi mật khẩu</Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\Content\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\services\\user.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Default\\components\\Content\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\utils\\firebase.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\components\\Loading\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\RegisteredCourses\\index.jsx",["330"],"import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport Course from '../Course';\r\n\r\nimport AppContext from '../../../../AppContext';\r\nimport { LOGOUT } from '../../../../AppTypes';\r\nimport { getUserCourses } from '../../../../services/course';\r\n\r\nconst RegisteredCourses = () => {\r\n  const { dispatch } = useContext(AppContext);\r\n  const [userCourses, setUserCourses] = useState([]);\r\n  const isExist = userCourses.length > 0;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let result = await getUserCourses();\r\n      if (result.authenticated === false) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n          payload: {\r\n            isLogged: false\r\n          }\r\n        });\r\n      } else {\r\n        setUserCourses(result)\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      { isExist ?\r\n        userCourses.map((userCourse, idx) =>\r\n          <Course key={idx} userCourse={userCourse} />\r\n        )\r\n        :\r\n        <div>Không có dữ liệu</div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisteredCourses;","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\User\\components\\Course\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\index.jsx",["331"],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\Video\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\BreadCrumb\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\services\\video.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\components\\Footer\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Teacher\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Teacher\\components\\Content\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Teacher\\components\\Menu\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\layouts\\Teacher\\components\\ItemMenu\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\Add\\index.jsx",["332"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Loading from '../../../../components/Loading';\r\n\r\nimport { getInitCategories } from '../../../../services/category';\r\nimport { getUser } from '../../../../services/user';\r\nimport AppContext from '../../../../AppContext';\r\nimport { LOGOUT } from '../../../../AppTypes';\r\nimport { create } from '../../../../services/course';\r\nimport {\r\n  stringGenerate,\r\n  uploadToFirebase,\r\n  removeToFirebase,\r\n  alertMessage\r\n} from '../../../../utils/common';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './index.css';\r\n\r\nconst schema = yup.object().shape({\r\n  title: yup.string().required('Bạn chưa nhập tiêu đề khóa học'),\r\n  name: yup.string().required('Bạn chưa nhập tên khóa học'),\r\n  sort_desc: yup.string().required('Bạn chưa nhập mô tả')\r\n});\r\n\r\nconst Add = () => {\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [previewImgLarge, setPreviewImgLarge] = useState('');\r\n  const [previewImgSmall, setPreviewImgSmall] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [user, setUser] = useState({\r\n    id: null,\r\n    name: null,\r\n  })\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      let res = await getUser();\r\n      if (res.authenticated === false) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n          payload: {\r\n            isLogged: false\r\n          }\r\n        });\r\n      } else {\r\n        setUser(res);\r\n      }\r\n    }\r\n    fetchUser();\r\n    const fetchData = async () => {\r\n      let result = await getInitCategories();\r\n      let initial = [];\r\n      let remap = result.reduce((accumulator, currentValue) => {\r\n        accumulator.push({ value: currentValue.id, label: currentValue.name });\r\n        return accumulator;\r\n      }, initial);\r\n      setCategories(remap);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleFile = (file) => {\r\n    let type = file ? file.type.split('/')[0] : null;\r\n    if (type !== 'image') {\r\n      return null;\r\n    }\r\n    let path = URL.createObjectURL(file);\r\n    return path;\r\n  }\r\n\r\n  const handleChooseImaSmall = (event) => {\r\n    let path = handleFile(event.target.files[0]);\r\n    if (path === null) {\r\n      alertMessage({ type: 'warning', message: 'Vui lòng chọn file là ảnh!' });\r\n      setPreviewImgSmall('')\r\n    } else {\r\n      setPreviewImgSmall(path);\r\n    }\r\n  }\r\n\r\n  const handleChooseImaLarge = (event) => {\r\n    let path = handleFile(event.target.files[0]);\r\n    if (path === null) {\r\n      alertMessage({ type: 'warning', message: 'Vui lòng chọn file là ảnh!' });\r\n      setPreviewImgLarge('');\r\n    } else {\r\n      setPreviewImgLarge(path);\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    setIsLoading(true);\r\n\r\n    const form = { ...data };\r\n    delete form.small_image;\r\n    delete form.large_image;\r\n\r\n    if (previewImgLarge === '' || previewImgSmall === '') {\r\n      alertMessage({ type: 'warning', message: 'Vui lòng chọn ảnh cho khóa học!' });\r\n      setIsLoading(false);\r\n      return\r\n    }\r\n\r\n    let imgName = stringGenerate() + data.small_image[0].name;\r\n    let imgLargeName = stringGenerate() + data.large_image[0].name;\r\n\r\n    let urlImg = await uploadToFirebase({\r\n      file: data.small_image[0],\r\n      fileName: imgName,\r\n      folderUrl: `images/courses/teacher-id-${user.id}`\r\n    });\r\n    let urlLargeImg = await uploadToFirebase({\r\n      file: data.large_image[0],\r\n      fileName: imgLargeName,\r\n      folderUrl: `images/courses/teacher-id-${user.id}`\r\n    });\r\n    if (urlImg === null || urlLargeImg === null) {\r\n      alertMessage({ type: 'error', message: 'Đã có lỗi xảy ra!' });\r\n      setIsLoading(false);\r\n      setPreviewImgSmall('');\r\n      setPreviewImgLarge('');\r\n      reset();\r\n      return;\r\n    }\r\n    form.img = urlImg;\r\n    form.img_large = urlLargeImg;\r\n    form.img_name = imgName;\r\n    form.img_large_name = imgLargeName;\r\n    form.teacher = user.full_name;\r\n    form.detail_desc = description;\r\n    form.categories_id = +data.categories_id;\r\n    form.price = +data.price;\r\n    form.price_promo = +data.price_promo;\r\n\r\n    const res = await create(form);\r\n    if (res.state) {\r\n      alertMessage({ type: 'success', message: 'Tạo khóa học thành công.' });\r\n\r\n    } else {\r\n      await removeToFirebase({\r\n        fileName: imgName,\r\n        folderUrl: `images/courses/teacher-id-${user.id}`\r\n      });\r\n      await removeToFirebase({\r\n        fileName: imgLargeName,\r\n        folderUrl: `images/courses/teacher-id-${user.id}`\r\n      });\r\n\r\n      alertMessage({ type: 'error', message: 'Tạo khóa học thất bại.' });\r\n\r\n      if (res.auth !== undefined && res.auth.authenticated === false) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n          payload: {\r\n            isLogged: false\r\n          }\r\n        });\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n    setPreviewImgSmall('');\r\n    setPreviewImgLarge('');\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading && <Loading />}\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <Col lg={9} xs={12} className=\"col-form-create\">\r\n            <Form.Group>\r\n              <Form.Label>Lĩnh vực</Form.Label>\r\n              <select className=\"form-control\" name=\"categories_id\" ref={register}>\r\n                {categories.map((opt, idx) =>\r\n                  <option key={idx} defaultValue={idx === 0 ? opt.value : null} value={opt.value}>{opt.label}</option>\r\n                )}\r\n              </select>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Tiêu đề</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"text\" name=\"title\" ref={register} placeholder=\"Nhập tiêu đề\" />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.title?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Tên khóa học</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"text\" name=\"name\" ref={register} placeholder=\"Nhập tên khóa học\" />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.name?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Mô tả ngắn</Form.Label>\r\n              <Form.Control as=\"textarea\" name=\"sort_desc\" ref={register} rows={3} />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.sort_desc?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Mô tả chi tiết</Form.Label>\r\n              <ReactQuill\r\n                theme=\"snow\"\r\n                name=\"detail_desc\"\r\n                style={{ height: '200px', marginBottom: '35px' }}\r\n                value={description}\r\n                onChange={setDescription}\r\n                ref={register}\r\n              />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.detail_desc?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Ảnh nhỏ</Form.Label><br />\r\n              <Image className=\"avatar\" src={previewImgSmall} roundedCircle />\r\n              <Form.File name=\"small_image\" onChange={handleChooseImaSmall} ref={register} accept=\"image/*\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Ảnh lớn</Form.Label><br />\r\n              <Image className=\"avatar\" src={previewImgLarge} roundedCircle />\r\n              <Form.File name=\"large_image\" onChange={handleChooseImaLarge} ref={register} accept=\"image/*\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Giá</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" name=\"price\" ref={register} placeholder=\"Nhập giá khóa học\" />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.price?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Giá khuyến mãi (nếu có)</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" name=\"price_promo\" ref={register} placeholder=\"Nhập giá khóa học\" />\r\n              <Form.Text className=\"text-muted message\">\r\n                <span className=\"msg\">{errors.price_promo?.message}</span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" className=\"btn-create\" variant=\"outline-dark\">Thêm khóa học</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Add;","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\Lesson\\index.jsx",["333"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Select from 'react-select';\r\n\r\nimport AppContext from '../../../../AppContext';\r\nimport { LOGOUT } from '../../../../AppTypes';\r\nimport { coursesOfTeacher } from '../../../../services/course';\r\nimport { getVideos } from '../../../../services/video';\r\nimport { getSlides } from '../../../../services/slide';\r\nimport { getUser } from '../../../../services/user';\r\n\r\nimport ListVideo from '../ListVideo';\r\nimport ListSlide from '../ListSlide';\r\nimport AddVideo from '../AddVideo';\r\nimport AddSlide from '../AddSlide';\r\nimport EditVideo from '../EditVideo';\r\nimport EditSlide from '../EditSlide';\r\n\r\nimport './index.css';\r\n\r\nconst Lesson = () => {\r\n  const { dispatch } = useContext(AppContext);\r\n  const [courses, setCourses] = useState([]);\r\n  const [selected, setSelected] = useState({ value: null, label: null });\r\n  const [videos, setVideos] = useState([]);\r\n  const [slides, setSlides] = useState([]);\r\n  const [isShowButtonAdd, setIsShowButtonAdd] = useState(false);\r\n  const [videoActive, setVideoActive] = useState(null);\r\n  const [slideActive, setSlideActive] = useState(null);\r\n  const [user, setUser] = useState({ id: null, name: '' });\r\n  const [toggleAdd, setToggleAdd] = useState(true);\r\n  const [toggleEdit, setToggleEdit] = useState(true);\r\n  const [toggleList, setToggleList] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      let res = await getUser();\r\n      if (res.authenticated === false) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n          payload: {\r\n            isLogged: false\r\n          }\r\n        });\r\n      } else {\r\n        setUser(res);\r\n      }\r\n    }\r\n    fetchUser();\r\n\r\n    const fetchData = async () => {\r\n      let res = await coursesOfTeacher();\r\n      if (res.authenticated === false) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n          payload: {\r\n            isLogged: false\r\n          }\r\n        });\r\n      } else {\r\n        let initial = [];\r\n        let remap = res.reduce((accumulator, currentValue) => {\r\n          accumulator.push({ value: currentValue.id, label: currentValue.name });\r\n          return accumulator;\r\n        }, initial);\r\n        setCourses(remap);\r\n        setSelected(remap[0])\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const handleSelectChange = async (selected) => {\r\n    setSelected(selected);\r\n    let videos = await getVideos(selected.value);\r\n    if (videos.authenticated === false) {\r\n      dispatch({\r\n        type: LOGOUT,\r\n        payload: {\r\n          isLogged: false\r\n        }\r\n      });\r\n    } else {\r\n      setVideos(videos);\r\n    }\r\n\r\n    let slides = await getSlides(selected.value);\r\n    if (slides.authenticated === false) {\r\n      dispatch({\r\n        type: LOGOUT,\r\n        payload: {\r\n          isLogged: false\r\n        }\r\n      });\r\n    } else {\r\n      setSlides(slides)\r\n    }\r\n\r\n    setIsShowButtonAdd(false);\r\n  }\r\n\r\n  const handleVideoActive = (video) => {\r\n    setVideoActive(video);\r\n    setIsShowButtonAdd(true);\r\n    setToggleAdd(true);\r\n    setToggleEdit(true);\r\n    setToggleList(true);\r\n  }\r\n\r\n  const handleSlideActive = (slide) => {\r\n    setSlideActive(slide);\r\n    setIsShowButtonAdd(true);\r\n    setToggleAdd(false);\r\n    setToggleEdit(false);\r\n    setToggleList(false);\r\n  }\r\n\r\n  const onAdd_clicked = () => {\r\n    setIsShowButtonAdd(false);\r\n    setToggleAdd(true);\r\n    setToggleEdit(true);\r\n    setToggleList(true);\r\n  }\r\n\r\n  const handleUpdateVideo = (video) => {\r\n    let newVideos = [...videos];\r\n    let videoUpdateId = newVideos.findIndex(item => item.id === video.id);\r\n    newVideos[videoUpdateId] = video;\r\n    setVideos(newVideos)\r\n  }\r\n\r\n  const handleUpdateSlide = (slide) => {\r\n    let newSlides = [...slides];\r\n    let slideUpdateId = newSlides.findIndex(item => item.id === slide.id);\r\n    newSlides[slideUpdateId] = slide;\r\n    setSlides(newSlides);\r\n  }\r\n\r\n  const handleGetNewVideo = (video) => {\r\n    setVideos([...videos, video]);\r\n  }\r\n\r\n  const handleGetNewSlide = (slide) => {\r\n    setSlides([...slides, slide]);\r\n  }\r\n\r\n  const handleShowSlide = () => {\r\n    setToggleAdd(false);\r\n    setToggleList(false);\r\n  }\r\n\r\n  const handleShowVideo = () => {\r\n    setToggleAdd(true);\r\n    setToggleList(true);\r\n  }\r\n\r\n  const handleShowEditVideo = () => {\r\n    setToggleEdit(true);\r\n    setToggleList(true);\r\n    setVideoActive(videos[0]);\r\n  }\r\n\r\n  const handleShowEditSlide = () => {\r\n    setToggleEdit(false);\r\n    setToggleList(false);\r\n    setSlideActive(slides[0]);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col lg={12} xs={12}>\r\n          <Form.Group>\r\n            <Form.Label>Khóa học đã tạo</Form.Label>\r\n            <Select\r\n              value={selected}\r\n              onChange={handleSelectChange}\r\n              isClearable={false}\r\n              isSearchable={true}\r\n              options={courses}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col lg={12} xs={12}>\r\n          <Row>\r\n            <Col lg={4} xs={12}>\r\n              {toggleList\r\n                ? <ListVideo videos={videos} onVideoActive={handleVideoActive} />\r\n                : <ListSlide slides={slides} onSlideActive={handleSlideActive} />\r\n              }\r\n            </Col>\r\n            <Col lg={8} xs={12} className=\"form-relative\">\r\n              {isShowButtonAdd &&\r\n                <>\r\n                  <Button variant=\"outline-danger\" className=\"btn-add\" onClick={onAdd_clicked}>\r\n                    <i className=\"fa fa-plus\"></i> Thêm mới\r\n                  </Button>\r\n                  {toggleEdit\r\n                    ? <EditVideo courseId={selected.value} videoUpdate={videoActive} user={user} onUpdateVideo={handleUpdateVideo} onShowEditSlide={handleShowEditSlide} />\r\n                    : <EditSlide courseId={selected.value} slideUpdate={slideActive} user={user} onUpdateSlide={handleUpdateSlide} onShowEditVideo={handleShowEditVideo} />\r\n                  }\r\n                </>\r\n              }\r\n              {!isShowButtonAdd &&\r\n                <>\r\n                  {toggleAdd\r\n                    ? <AddVideo courseId={selected.value} user={user} onNewVideo={handleGetNewVideo} onShowAddSlide={handleShowSlide} />\r\n                    : <AddSlide courseId={selected.value} user={user} onNewSlide={handleGetNewSlide} onShowAddVideo={handleShowVideo} />\r\n                  }\r\n                </>\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Lesson;","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\VideoThumbnail\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\VideoThumbnail\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\utils\\common.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\AddVideo\\index.jsx",["334"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport { create } from '../../../../services/video';\r\nimport AppContext from '../../../../AppContext';\r\nimport { LOGOUT } from '../../../../AppTypes';\r\nimport {\r\n  stringGenerate,\r\n  uploadToFirebase,\r\n  removeToFirebase,\r\n  alertMessage\r\n} from '../../../../utils/common';\r\n\r\nimport Loading from '../../../../components/Loading';\r\n\r\nimport './index.css';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required('Bạn chưa nhập tên bài giảng')\r\n});\r\n\r\nconst AddVideo = ({ courseId, user, onNewVideo, onShowAddSlide }) => {\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n  const { dispatch } = useContext(AppContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [previewVideo, setPreviewVideo] = useState('');\r\n\r\n  const handleChooseFile = (e) => {\r\n    let file = e.target.files[0] || null;\r\n    let type = file ? file.type.split('/')[0] : null;\r\n    if (type !== 'video') {\r\n      setPreviewVideo('');\r\n      return;\r\n    }\r\n    setPreviewVideo(URL.createObjectURL(file));\r\n  }\r\n\r\n  const handleShowAddSlide = () => {\r\n    onShowAddSlide();\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    setIsLoading(true);\r\n\r\n    const form = { ...data };\r\n    delete form.video;\r\n\r\n    if (previewVideo === '') {\r\n      alertMessage({ type: 'warning', message: 'Vui lòng chọn file là video!' });\r\n      setIsLoading(false);\r\n      setPreviewVideo('');\r\n      return;\r\n    }\r\n\r\n    let videoName = `teacher-id-${user.id}-` + stringGenerate() + data.video[0].name;\r\n    const url = await uploadToFirebase({\r\n      file: data.video[0],\r\n      fileName: videoName,\r\n      folderUrl: `videos/courses/${courseId}`\r\n    });\r\n    if (url === null) {\r\n      alertMessage({ type: 'error', message: 'Tạo video bài giảng thất bại' });\r\n      setIsLoading(false);\r\n      setPreviewVideo('');\r\n      reset();\r\n      return;\r\n    }\r\n    form.url = url;\r\n    form.video_name = videoName;\r\n    form.courses_id = courseId;\r\n\r\n    const res = await create(form);\r\n    if (res.state) {\r\n      alertMessage({ type: 'success', message: 'Tạo bài giảng thành công' });\r\n      onNewVideo({ ...form, id: res.id, rank: res.rank });\r\n\r\n    } else {\r\n      await removeToFirebase({\r\n        fileName: videoName,\r\n        folderUrl: `videos/courses/${courseId}`\r\n      })\r\n      alertMessage({ type: 'error', message: 'Tạo bài giảng thất bại' });\r\n\r\n      if (res.auth !== undefined && res.auth.authenticated === false) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n          payload: {\r\n            isLogged: false\r\n          }\r\n        });\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n    setPreviewVideo('');\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n      <Button variant=\"secondary\" className=\"btn-add-video\">\r\n        <i className=\"fa fa-video-camera\"></i> Thêm Video\r\n      </Button>\r\n      &nbsp;\r\n      <Button variant=\"outline-secondary\" className=\"btn-add-slide\" onClick={handleShowAddSlide}>\r\n        <i className=\"fa fa-file-pdf-o\"></i> Thêm Slide\r\n      </Button>\r\n      <Form onSubmit={handleSubmit(onSubmit)} className=\"form-create\">\r\n        <Form.Group>\r\n          <Form.Label>Tên bài giảng</Form.Label>\r\n          <Form.Control size=\"sm\" type=\"text\" name=\"name\" ref={register} placeholder=\"Nhập tên bài giảng\" />\r\n          <Form.Text className=\"text-muted message\">\r\n            <span className=\"msg\">{errors.name?.message}</span>\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Video bài giảng</Form.Label><br />\r\n          <ReactPlayer url={previewVideo} width={225} height={125} className=\"previewVideo\" /><br />\r\n          <Form.File name=\"video\" onChange={handleChooseFile} ref={register} accept=\"video/*\" />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" className=\"btn-create-lesson\" variant=\"outline-dark\">Thêm video</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddVideo;","F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\EditVideo\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\AddSlide\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\EditSlide\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\ListVideo\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\ListSlide\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\SlideThumbnail\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\services\\slide.js",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Teacher\\components\\Edit\\index.jsx",["335"],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\ListVideo\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\ListSlide\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\SlideThumbnail\\index.jsx",[],"F:\\Git\\WNC\\onlacademy-react\\src\\pages\\Document\\components\\Slide\\index.jsx",[],{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","severity":1,"message":"341","line":6,"column":3,"nodeType":"342","messageId":"343","endLine":6,"endColumn":19},{"ruleId":"344","severity":1,"message":"345","line":35,"column":6,"nodeType":"346","endLine":35,"endColumn":8,"suggestions":"347"},{"ruleId":"336","replacedBy":"348"},{"ruleId":"338","replacedBy":"349"},{"ruleId":"344","severity":1,"message":"345","line":30,"column":6,"nodeType":"346","endLine":30,"endColumn":8,"suggestions":"350"},{"ruleId":"344","severity":1,"message":"345","line":30,"column":6,"nodeType":"346","endLine":30,"endColumn":8,"suggestions":"351"},{"ruleId":"340","severity":1,"message":"352","line":21,"column":8,"nodeType":"342","messageId":"343","endLine":21,"endColumn":17},{"ruleId":"344","severity":1,"message":"353","line":51,"column":6,"nodeType":"346","endLine":51,"endColumn":8,"suggestions":"354"},{"ruleId":"344","severity":1,"message":"355","line":11,"column":6,"nodeType":"346","endLine":11,"endColumn":42,"suggestions":"356"},{"ruleId":"340","severity":1,"message":"357","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":16},{"ruleId":"344","severity":1,"message":"345","line":69,"column":6,"nodeType":"346","endLine":69,"endColumn":8,"suggestions":"358"},{"ruleId":"340","severity":1,"message":"359","line":1,"column":27,"nodeType":"342","messageId":"343","endLine":1,"endColumn":36},{"ruleId":"344","severity":1,"message":"345","line":29,"column":6,"nodeType":"346","endLine":29,"endColumn":8,"suggestions":"360"},{"ruleId":"344","severity":1,"message":"361","line":47,"column":6,"nodeType":"346","endLine":47,"endColumn":8,"suggestions":"362"},{"ruleId":"344","severity":1,"message":"345","line":77,"column":6,"nodeType":"346","endLine":77,"endColumn":8,"suggestions":"363"},{"ruleId":"344","severity":1,"message":"345","line":75,"column":6,"nodeType":"346","endLine":75,"endColumn":8,"suggestions":"364"},{"ruleId":"340","severity":1,"message":"359","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"344","severity":1,"message":"345","line":116,"column":6,"nodeType":"346","endLine":116,"endColumn":8,"suggestions":"365"},"no-native-reassign",["366"],"no-negated-in-lhs",["367"],"no-unused-vars","'GET_USER_COURSES' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["368"],["366"],["367"],["369"],["370"],"'feedbacks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Toast', 'courseId', 'from', and 'history'. Either include them or remove the dependency array.",["371"],"React Hook useEffect has a missing dependency: 'forcePage'. Either include it or remove the dependency array.",["372"],"'firebase' is defined but never used.",["373"],"'useEffect' is defined but never used.",["374"],"React Hook useEffect has missing dependencies: 'courseId' and 'dispatch'. Either include them or remove the dependency array.",["375"],["376"],["377"],["378"],"no-global-assign","no-unsafe-negation",{"desc":"379","fix":"380"},{"desc":"379","fix":"381"},{"desc":"379","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"379","fix":"387"},{"desc":"379","fix":"388"},{"desc":"389","fix":"390"},{"desc":"379","fix":"391"},{"desc":"379","fix":"392"},{"desc":"379","fix":"393"},"Update the dependencies array to be: [dispatch]",{"range":"394","text":"395"},{"range":"396","text":"395"},{"range":"397","text":"395"},"Update the dependencies array to be: [Toast, courseId, from, history]",{"range":"398","text":"399"},"Update the dependencies array to be: [paginate.uri, paginate.currentPage, forcePage]",{"range":"400","text":"401"},{"range":"402","text":"395"},{"range":"403","text":"395"},"Update the dependencies array to be: [courseId, dispatch]",{"range":"404","text":"405"},{"range":"406","text":"395"},{"range":"407","text":"395"},{"range":"408","text":"395"},[915,917],"[dispatch]",[847,849],[807,809],[1617,1619],"[Toast, courseId, from, history]",[336,372],"[paginate.uri, paginate.currentPage, forcePage]",[1969,1971],[804,806],[1586,1588],"[courseId, dispatch]",[2491,2493],[2520,2522],[3903,3905]]